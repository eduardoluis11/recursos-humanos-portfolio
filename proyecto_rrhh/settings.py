"""
Django settings for proyecto_rrhh project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

""" Usaré esta biblioteca para poder acceder a la carpeta "static" """
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/




# SECURITY WARNING: keep the secret key used in production secret!
# NO MODIFICAR
SECRET_KEY = 'django-insecure-%3na*_6^5vy)@xh5nqqliv90k2a!yc=d@%e_!+rw-&qfwbu3))'





# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

""" Para crear los modelos: recuerda que tengo que ir a Settings.py, y debo instalar las apps que haya creado, es decir, 
la carpeta en donde tengo los views (el views.py). En mi caso, mi app se llama “app_rrhh”.
"""
INSTALLED_APPS = [
    'app_rrhh',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'proyecto_rrhh.urls'

""" Para que mi proyecto detecte la carpeta "templates", la cual está en la carpeta
raíz del proyecto, voy a poner "BASE_DIR" y "templates" aquí (fuente: https://youtu.be/pRNhdI9PVmg .)
"""
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'proyecto_rrhh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

""" Sigo sin poder crear la bbdd usando makemigrations. Tengo que agregar la siguiente línea de código para terminar
de crear la bbdd usando makemigrations (fuente: https://docs.djangoproject.com/en/4.1/topics/auth/customizing/ ).
"""
AUTH_USER_MODEL = "app_rrhh.User"


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

""" Voy a ver si cambiando el idioma a español me muestra las fechas en español (es decir, que me diga 
"Agosto" en lugar de "August") (fuente: 
https://stackoverflow.com/questions/13369493/how-to-format-date-in-different-languages).

Quiero agregar puntos para separar cada “000” (por ejemplo: 1.000) para así poder los salarios de manera más fácil. 
Para ello, puedo instalar “USE_THOUSAND_SEPARATOR”. 
"""

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

USE_THOUSAND_SEPARATOR = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

""" Para subir imágenes y así subir las firmas de los trabajadores y los encargados de recursos humanos, voy a tener 
que configurar varias cosas en mi proyecto de Django. Primero, tendré que ir a settings.py, y agregar unas líneas que 
digan MEDIA ROOT, y MEDIA URL. Aquí puedo ver mas instrucciones sobre como hacerlo: 
https://www.youtube.com/watch?v=ygzGr51dbsY . 
"""
MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


""" Esto accederá a todos los archivos de la carpeta "static", en donde se encuentran el CSS y el JS de este proyecto
(fuente: la respuesta de Taylor en 
https://stackoverflow.com/questions/51754318/django-static-files-not-loading-or-not-working ) """
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
